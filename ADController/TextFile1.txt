* AD프로그램 로직 
1. 사용자 동기화 조회
	가. AD 사용자 조회
	나. ERP 사용자 조회
		1) ERP HR계정 사용자 조회
		-> IDCenter로 가는 사용자 조회
		2) ERP NAC계정 사용자 조회
		-> 전체 재직중인 사원 중 IDCenter로 가지 않는 사원 조회
	다. IDCenter 사용자 조회
	-> 



* 생산3동 1층 공사
1. 
2. 



* 생산4동 1층 실사
1. 생산 4동 1층 사무실에 있는 스위치랙에 스위치 2~4개 설치 가능한지 확인
2. 허스키장비에 걸려있는 LAN 원선이 어디서 나왔는지 확인
3. 허스키 설비의 LAN의 원선이 생산 4동 1층이 아닌 경우 4동 1층에서부터 LAN 끌어오는 거로 견적 잡기
4. 생산 4동 1층의 스위치 설치 추천 위치 확인
5. 생산 4동 1층 사진 찍어오기

6. 공사 가능일자 문의//이후 팀장님께 가능일자 보고
7. 




strBuild.AppendLine("SELECT																																																 ");
strBuild.AppendLine("A.EmpID--사번																																													     ");
strBuild.AppendLine(", A.EmpSeq--사원내부코드																																											 ");
strBuild.AppendLine(", Z.CellPhone--휴대폰번호																																											 ");
strBuild.AppendLine(", B.DeptSeq																																														 ");
strBuild.AppendLine(", N'' AS PwdMailAdder																																												 ");
strBuild.AppendLine(", N'' AS PersonId																																													 ");
strBuild.AppendLine(", D.EmpEngFirstName																																												 ");
strBuild.AppendLine(", D.EmpEngLastName																																													 ");
strBuild.AppendLine(", D.EmpName																																														 ");
strBuild.AppendLine(", D.EmpFamilyName --성																																												 ");
strBuild.AppendLine(", D.EmpFirstName --이름																																											 ");
strBuild.AppendLine("																																																	 ");
strBuild.AppendLine(", CONCAT(D.EmpName, N'(', D.EmpEngFirstName, D.EmpEngLastName, N')') AS cn																															 ");
strBuild.AppendLine(", E.DeptName AS department																																											 ");
strBuild.AppendLine(", CONCAT(D.EmpName, N'(', D.EmpEngFirstName, D.EmpEngLastName, N')') AS displayName																												 ");
strBuild.AppendLine(", CONCAT(D.EmpName, N'(', D.EmpEngFirstName, D.EmpEngLastName, N')') AS givenName																													 ");
strBuild.AppendLine(", F.MinorName AS title --직위																																									     ");
strBuild.AppendLine(", G.MinorName AS 직급																																											     ");
strBuild.AppendLine(", H.MinorName AS 직책																																											     ");
strBuild.AppendLine(", N'' AS mail																																														 ");
strBuild.AppendLine(", A.EmpID AS sAMAccountName																																										 ");
strBuild.AppendLine("FROM _fnAdmEmpOrdRetResidId(1, CONVERT(NCHAR(8), GETDATE(), 112)) AS A																																 ");
strBuild.AppendLine("INNER JOIN _THRAdmOrdEmp AS B WITH(NOLOCK) ON B.IsOrdDateLast = '1' AND A.EmpSeq = B.EmpSeq																										 ");
strBuild.AppendLine("    AND B.OrdDate <= CASE WHEN ISNULL(A.RetireDate,'') > CONVERT(VARCHAR(8), GETDATE(), 112) THEN CONVERT(VARCHAR(8), GETDATE(), 112)  ELSE A.RetireDate END										 ");
strBuild.AppendLine("    AND B.OrdEndDate >= CASE WHEN ISNULL(A.RetireDate,'') > CONVERT(VARCHAR(8), GETDATE(), 112) THEN CONVERT(VARCHAR(8), GETDATE(), 112)  ELSE A.RetireDate END									 ");
strBuild.AppendLine("INNER JOIN _TDAEmp AS D WITH(NOLOCK) ON B.CompanySeq = D.CompanySeq AND A.EmpSeq = D.EmpSeq																										 ");
strBuild.AppendLine("INNER JOIN _TDADept AS E WITH(NOLOCK) ON B.DeptSeq = E.DeptSeq																																		 ");
strBuild.AppendLine("-- 직위를 가져오기 위한 조인																																										 ");
strBuild.AppendLine("LEFT OUTER JOIN _TDAUMinor AS F WITH(NOLOCK) ON (B.CompanySeq = F.CompanySeq AND  B.UMJpSeq = F.MinorSeq) 																							 ");
strBuild.AppendLine("-- 직급을 가져오기 위한 조인																																										 ");
strBuild.AppendLine("LEFT OUTER JOIN _TDAUMinor AS G WITH(NOLOCK) ON (B.CompanySeq = G.CompanySeq AND B.UMPgSeq = G.MinorSeq) 																							 ");
strBuild.AppendLine("-- 직책을 가져오기 위한 조인  																																									  	 ");
strBuild.AppendLine("LEFT OUTER JOIN _TDAUMinor AS H WITH(NOLOCK) ON (B.CompanySeq = H.CompanySeq AND  B.UMJdSeq    = H.MinorSeq)																						 ");
strBuild.AppendLine("																																																	 ");
strBuild.AppendLine("																																																	 ");
strBuild.AppendLine("INNER JOIN _TDAEmpIn AS Z WITH(NOLOCK) ON B.CompanySeq = Z.CompanySeq AND A.EmpId = Z.EmpId																										 ");
strBuild.AppendLine("WHERE 1=1																																															 ");
strBuild.AppendLine("	AND OrdName NOT IN(N'')																																											 ");
strBuild.AppendLine("	AND RetDate = N''																																												 ");
strBuild.AppendLine("	AND A.EmpId NOT IN																																												 ");
strBuild.AppendLine("	(																																																 ");
strBuild.AppendLine("		SELECT																																														 ");
strBuild.AppendLine("		A.EmpID--사번																																												 ");
strBuild.AppendLine("		FROM _TDAEmpIn AS A WITH(NOLOCK)																																							 ");
strBuild.AppendLine("		INNER JOIN _THRAdmOrdEmp AS B WITH(NOLOCK) ON A.CompanySeq = B.CompanySeq AND B.IsOrdDateLast = '1' AND A.EmpSeq = B.EmpSeq																	 ");
strBuild.AppendLine("		    AND B.OrdDate <= CASE WHEN ISNULL(A.RetireDate,'') > CONVERT(VARCHAR(8), GETDATE(), 112) THEN CONVERT(VARCHAR(8), GETDATE(), 112)  ELSE A.RetireDate END								 ");
strBuild.AppendLine("		    AND B.OrdEndDate >= CASE WHEN ISNULL(A.RetireDate,'') > CONVERT(VARCHAR(8), GETDATE(), 112) THEN CONVERT(VARCHAR(8), GETDATE(), 112)  ELSE A.RetireDate END								 ");
strBuild.AppendLine("		INNER JOIN _TCAUser AS C WITH(NOLOCK) ON A.CompanySeq = C.CompanySeq AND A.EmpSeq = C.EmpSeq AND C.PwdMailAdder<> ''--PwdMailAdder(이메일)이 NULL이 아니어야 HR 계정이 있는 것임.			 ");
strBuild.AppendLine("		INNER JOIN _TDAEmp AS D WITH(NOLOCK) ON A.CompanySeq = D.CompanySeq AND A.EmpSeq = D.EmpSeq																									 ");
strBuild.AppendLine("		WHERE 1 = 1																																													 ");
strBuild.AppendLine("		    AND C.UserSeq NOT IN(1)--마스터 제외																																					 ");
strBuild.AppendLine("		    AND A.RetireDate >= CONVERT(VARCHAR(8), GETDATE(), 112)--현재기준 RetireDate가 없는 사원만 출력																							 ");
strBuild.AppendLine("	)																																																 ");
strBuild.AppendLine("ORDER BY A.EmpID ASC																																												 ");



strBuil.AppendLine("SELECT																																																				  ");
strBuil.AppendLine("A.EmpID--사번																																																		  ");
strBuil.AppendLine(", A.EmpSeq--사원내부코드																																															  ");
strBuil.AppendLine(", A.CellPhone--휴대폰번호																																															  ");
strBuil.AppendLine(", B.DeptSeq																																																			  ");
strBuil.AppendLine(", C.PwdMailAdder--이메일																																															  ");
strBuil.AppendLine(", CASE WHEN CHARINDEX('@', C.PwdMailAdder) > 1 THEN SUBSTRING(C.PwdMailAdder, 1, CHARINDEX('@', C.PwdMailAdder) - 1) ELSE '' END PersonId --아이디 nvarchar(20)													      ");
strBuil.AppendLine(", D.EmpEngFirstName																																																	  ");
strBuil.AppendLine(", D.EmpEngLastName																																																	  ");
strBuil.AppendLine(", D.EmpName																																																			  ");
strBuil.AppendLine(", D.EmpFamilyName --성																																																  ");
strBuil.AppendLine(", D.EmpFirstName --이름																																																  ");
strBuil.AppendLine("																																																					  ");
strBuil.AppendLine(", CONCAT(D.EmpName, N'(', D.EmpEngFirstName, D.EmpEngLastName, N')') AS cn																																			  ");
strBuil.AppendLine(", E.DeptName AS department																																															  ");
strBuil.AppendLine(", CONCAT(D.EmpName, N'(', D.EmpEngFirstName, D.EmpEngLastName, N')') AS displayName																																	  ");
strBuil.AppendLine(", CONCAT(D.EmpName, N'(', D.EmpEngFirstName, D.EmpEngLastName, N')') AS givenName																																	  ");
strBuil.AppendLine(", F.MinorName AS title --직위																																														  ");
strBuil.AppendLine(", G.MinorName AS 직급																																																  ");
strBuil.AppendLine(", H.MinorName AS 직책																																																  ");
strBuil.AppendLine(", C.PwdMailAdder AS mail																																															  ");
strBuil.AppendLine(", A.EmpID AS sAMAccountName																																															  ");
strBuil.AppendLine("FROM _TDAEmpIn AS A WITH(NOLOCK)																																													  ");
strBuil.AppendLine("INNER JOIN _THRAdmOrdEmp AS B WITH(NOLOCK) ON A.CompanySeq = B.CompanySeq AND B.IsOrdDateLast = '1' AND A.EmpSeq = B.EmpSeq																							  ");
strBuil.AppendLine("    AND B.OrdDate <= CASE WHEN ISNULL(A.RetireDate,'') > CONVERT(VARCHAR(8), GETDATE(), 112) THEN CONVERT(VARCHAR(8), GETDATE(), 112)  ELSE A.RetireDate END														  ");
strBuil.AppendLine("    AND B.OrdEndDate >= CASE WHEN ISNULL(A.RetireDate,'') > CONVERT(VARCHAR(8), GETDATE(), 112) THEN CONVERT(VARCHAR(8), GETDATE(), 112)  ELSE A.RetireDate END														  ");
strBuil.AppendLine("INNER JOIN _TCAUser AS C WITH(NOLOCK) ON A.CompanySeq = C.CompanySeq AND A.EmpSeq = C.EmpSeq AND C.PwdMailAdder<> ''--PwdMailAdder(이메일)이 NULL이 아니어야 HR 계정이 있는 것임.									  ");
strBuil.AppendLine("INNER JOIN _TDAEmp AS D WITH(NOLOCK) ON A.CompanySeq = D.CompanySeq AND A.EmpSeq = D.EmpSeq                                                                                        									  ");
strBuil.AppendLine("INNER JOIN _TDADept AS E WITH(NOLOCK) ON B.DeptSeq = E.DeptSeq																																						  ");
strBuil.AppendLine("-- 직위를 가져오기 위한 조인																																														  ");
strBuil.AppendLine("LEFT OUTER JOIN _TDAUMinor AS F WITH(NOLOCK) ON (B.CompanySeq = F.CompanySeq AND  B.UMJpSeq = F.MinorSeq) 																											  ");
strBuil.AppendLine("-- 직급을 가져오기 위한 조인																																														  ");
strBuil.AppendLine("LEFT OUTER JOIN _TDAUMinor AS G WITH(NOLOCK) ON (B.CompanySeq = G.CompanySeq AND B.UMPgSeq = G.MinorSeq) 																											  ");
strBuil.AppendLine("-- 직책을 가져오기 위한 조인  																																														  ");
strBuil.AppendLine("LEFT OUTER JOIN _TDAUMinor AS H WITH(NOLOCK) ON (B.CompanySeq = H.CompanySeq AND  B.UMJdSeq    = H.MinorSeq)																										  ");
strBuil.AppendLine("WHERE 1 = 1																																																			  ");
strBuil.AppendLine("    AND C.UserSeq NOT IN(1)--마스터 제외																																											  ");
strBuil.AppendLine("    AND A.RetireDate >= CONVERT(VARCHAR(8), GETDATE(), 112)--현재기준 RetireDate가 없는 사원만 출력																													  ");
strBuil.AppendLine("ORDER BY A.EmpID ASC																																																  ");


